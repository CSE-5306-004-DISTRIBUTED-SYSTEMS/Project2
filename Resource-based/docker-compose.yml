services:
  # PostgreSQL Database
  database:
    image: postgres:15-alpine
    container_name: polling-database
    environment:
      POSTGRES_DB: polling_db
      POSTGRES_USER: polling_user
      POSTGRES_PASSWORD: polling_password
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - polling-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U polling_user -d polling_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API Instance 1
  api1:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: polling-api-1
    environment:
      NODE_ENV: production
      PORT: 3000
      INSTANCE_NAME: api-1
      DB_HOST: database
      DB_PORT: 5432
      DB_USER: polling_user
      DB_PASSWORD: polling_password
      DB_NAME: polling_db
    depends_on:
      database:
        condition: service_healthy
    networks:
      - polling-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # API Instance 2
  api2:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: polling-api-2
    environment:
      NODE_ENV: production
      PORT: 3000
      INSTANCE_NAME: api-2
      DB_HOST: database
      DB_PORT: 5432
      DB_USER: polling_user
      DB_PASSWORD: polling_password
      DB_NAME: polling_db
    depends_on:
      database:
        condition: service_healthy
    networks:
      - polling-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Load Balancer
  loadbalancer:
    image: nginx:alpine
    container_name: polling-loadbalancer
    ports:
      - "3005:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - api1
      - api2
    networks:
      - polling-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/lb-health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend (React App)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        REACT_APP_API_URL: http://localhost:3005
    container_name: polling-frontend
    ports:
      - "3002:80"
    depends_on:
      - loadbalancer
    networks:
      - polling-network

volumes:
  db_data:
    driver: local

networks:
  polling-network:
    driver: bridge
