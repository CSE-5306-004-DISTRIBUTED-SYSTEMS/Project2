## dockerfile for database  First Version 
FROM postgres:13

# Set environment variables for DB setup
ENV POSTGRES_USER=postgres \
    POSTGRES_PASSWORD=postgres \
    POSTGRES_DB=pollsdb \
    POSTGRES_REPLICATION_USER=replicator \
    POSTGRES_REPLICATION_PASSWORD=replicator


COPY init.sh /docker-entrypoint-init.sh
# COPY schema.sql /docker-entrypoint-initdb.d/schema.sql
# COPY replication_init.sh /docker-entrypoint-initdb.d/replication_init.sh
# COPY postgresql.conf /etc/postgresql/postgresql.conf
# COPY pg_hba.conf /etc/postgresql/pg_hba.conf

RUN chmod +x /docker-entrypoint-init.sh
# RUN chmod +x /docker-entrypoint-initdb.d/replication_init.sh

# EXPOSE 5432
# ENTRYPOINT ["/docker-entrypoint-init.sh", "primary"]
ENTRYPOINT ["/docker-entrypoint-init.sh", "replica"]
HEALTHCHECK --interval=5s CMD pg_isready -U postgres





#========================================

# FROM postgres:13
# RUN apt-get update && apt-get install -y gosu
# # Copy initialization scripts and configs
# COPY schema.sql /docker-entrypoint-initdb.d/schema.sql
# COPY pg_hba.conf /etc/postgresql/pg_hba.conf
# COPY postgresql.conf /etc/postgresql/postgresql.conf
# COPY init.sh /docker-entrypoint-initdb.d/init.sh

# RUN chmod +x /docker-entrypoint-initdb.d/init.sh






## command line
## docker build -t polls-primary .


# docker run -d \
#   --name primary \
#   --network polls-net \
#   -e POSTGRES_USER=postgres \
#   -e POSTGRES_PASSWORD=postgres \
#   -p 5432:5432 \
#   polls-primary

## docker exec -it primary psql -U postgres

# connect to database
#\l
#\c pollsdb
#\dt
# \d polls


# INSERT INTO polls (id, question, options) 
# VALUES ('a1b2c3d4-e5f6-7890-1234-567890abcdef', 
#'What is your favorite color?', '{"Red", "Green", "Blue"}');

# SELECT * FROM polls;



